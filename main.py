import random
# Imports library called colorama (to color the )
from colorama import Fore, Style 

# Gets a random word from words.txt
def get_wordle_word():
  # Open the words.txt file to read as f
  with open('words.txt', encoding='utf-8') as f:
    file = f.readlines() # Array of all lines for f
  
    wordle_index = random.randint(0, len(file) - 1) # Generate random index for wordle word
    return file[wordle_index].strip() # Get the word and return it with newline ('\n') removed

# Checks if a guess is valid
# PARAMETER: guess - The inputted guess from user
def valid_guess(guess):
  # Open the words.txt file to read as f
  with open('words.txt', encoding='utf-8') as f:
    file = f.readlines() # Array of all lines of f
 
    # Repeat for each element in file array (the element in use is named word)
    for word in file:
      # Checks if guess is inside the array
      if guess == word.strip():
        return True # If so, return True
  return False # If word is not in file, return false

# Asks user for guess until its a valid word, and then returns the word
def get_guess():
  guess = "" # Variable which holds user guess

  # Loops until user guess is valid
  while not valid_guess(guess):
    guess = input("Enter a guess: ") # Asks user for guess
  return guess # Returns guess value once guess is valid

# Color the user's guess
# PARAMETER: guess - The inputted guess to be checked (from the user)
# PARAMETER: wordle_word - The word which the guess is being checked against
def color_guess(guess, wordle_word):
  colored_guess = [] # Array which will hold the colored version of the guess

  # Loops through indices from 0 to the length of the guess string (exclusive)
  for i in range(len(guess)):
    # If the guess's letter for that index is the same as the wordle_word's letter for that inde
    if guess[i] == wordle_word[i]:
      # Put into the array of colored letters the guess letter colored in green
      colored_guess.append(f'{Fore.GREEN}{guess[i]}{Style.RESET_ALL}')
    # Else if the guess letter is anywhere in the wordle_word
    elif guess[i] in wordle_word:
      # Put into the array of colored letters the guess letter colored in yellow
      colored_guess.append(f'{Fore.YELLOW}{guess[i]}{Style.RESET_ALL}')
    # Else (the guess's letter is not in the wordle_word)
    else:
      # Just put the letter (no coloring) into the array of letters
      colored_guess.append(guess[i])

  return colored_guess # Returns the colored array

# Returns true if every letter is green (every letter is correct), otherwise false
# PARAMETER: colored_guess - The array of colored letters generated by color_guess
def check_guess(colored_guess):
  # Loops through each letter in colored_guess array
  for letter in colored_guess:
    # If a letter doesn't have green, return a spaced-out string with colors
    if Fore.GREEN not in letter:
      return ' '.join(colored_guess) # g r e e n 

  # If all letters are green, return true
  return True

# Asks the user for either a y or n to continue playing. If n, print out a message.
# PARAMETER: solved_count - The amount of times the user has solved the wordle word.
def check_if_playing(solved_count):

  # Empty string to hold user's input
  playing = ''

  # While user hasn't responded with 'y' run this code
  while playing != 'y':
    playing = input('Do you want to play? (y/n) ') # Get input from user
    # If user inputs 'n', print a message with solved amount of wordles and return False (to exit game)
    if playing == 'n':
      if solved_count != 0:
        print(f'Wordles Solved: {solved_count}')
      print()
      return False
      
  print()
  return True # If response is 'y', return True (to continue game)

# Main function which holds the code being run for the game
def main():
  isPlaying = True # Keeps track of if user wants to play
  solved_count = 0 # How many times a user has gotten the wordle word.

  # Quick Intro
  print('Welcome to Wordle!')
  print()

  # Loops until the user doesn't want to play anymore
  while isPlaying:
    wordle_word = get_wordle_word() # Chooses a random wordle word to guess
    guesses = [] # Initializes array for colroed guesses
    solved = False # Keeps track of if user has gotten the wordle word

    # Loops until either solved = True or the user has guessed 6 times already
    while not solved and len(guesses) != 6:
      guess = get_guess() # Gets guess from user
      colored_guess = color_guess(guess, wordle_word) # Colors the guess based on wordle_word

      # If all the letters are green, say that the wordle word has been found, 
      if check_guess(colored_guess) == True:
        solved = True
        break
      # Otherwise, add the colored string to guesses and print each guess out
      else:
        guesses.append(check_guess(colored_guess))
        for guess in guesses:
          print(guess)
          
    # If user solves correctly, say so and increment the amount solved correctly
    if solved:
      print('\nCongratulations, you have guessed the right word!')
      solved_count += 1
    # Otherwise, print the wordle word the user failed to guess
    else:
      print('\nUnfortunately, you have guessed the wrong word. :(')
      print(f'Actual Word: {wordle_word}')

    print()
    print()

    # Prompts user if they're playing or not and based on that returns a boolean to either continue the game or end it
    isPlaying = check_if_playing(solved_count)

# Sets the main function as the code to be run
# Python runs anything which is not a function, this make it clear which function is being run.
if __name__ == "__main__":
  main()


